FILE: category.kt
    package foo.bar

    public final typealias Obj<Cat, A> = R|{io/github/kyay10/highkt/K2<Cat, A, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|
    public abstract interface Category<Cat> : R|kotlin/Any| {
        public abstract fun <A, B, C> R|{io/github/kyay10/highkt/K2<Cat, B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, B>, C>|.compose(g: R|{io/github/kyay10/highkt/K2<Cat, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, B>|): R|{io/github/kyay10/highkt/K2<Cat, A, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, C>|

        public abstract fun <A> R|{io/github/kyay10/highkt/K2<Cat, A, *>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, *>|.source(): R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|

        public abstract fun <A> R|{io/github/kyay10/highkt/K2<Cat, *, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, *>, A>|.target(): R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|

    }
    context(category: R|foo/bar/Category<Cat>|)
    public final infix fun <Cat, A, B, C> R|{io/github/kyay10/highkt/K2<Cat, B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, B>, C>|.compose(g: R|{io/github/kyay10/highkt/K2<Cat, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, B>|): R|{io/github/kyay10/highkt/K2<Cat, A, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, C>| {
        ^compose R|kotlin/with|<R|foo/bar/Category<Cat>|, R|{io/github/kyay10/highkt/K2<Cat, A, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, C>|>(R|<local>/category|, <L> = with@fun R|foo/bar/Category<Cat>|.<anonymous>(): R|{io/github/kyay10/highkt/K2<Cat, A, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, C>| <inline=Inline, kind=EXACTLY_ONCE>  {
            ^ (this@R|special/anonymous|, this@R|foo/bar/compose|).R|SubstitutionOverride<foo/bar/Category.compose: R|{io/github/kyay10/highkt/K2<Cat, A, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, C>|>|<R|A|, R|B|, R|C|>(R|<local>/g|)
        }
        )
    }
    context(category: R|foo/bar/Category<Cat>|)
    public final fun <Cat, A> R|{io/github/kyay10/highkt/K2<Cat, A, *>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, *>|.source(): R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>| {
        ^source R|kotlin/with|<R|foo/bar/Category<Cat>|, R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|>(R|<local>/category|, <L> = with@fun R|foo/bar/Category<Cat>|.<anonymous>(): R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>| <inline=Inline, kind=EXACTLY_ONCE>  {
            ^ (this@R|special/anonymous|, this@R|foo/bar/source|).R|SubstitutionOverride<foo/bar/Category.source: R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|>|<R|A|>()
        }
        )
    }
    context(category: R|foo/bar/Category<Cat>|)
    public final fun <Cat, A> R|{io/github/kyay10/highkt/K2<Cat, *, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, *>, A>|.target(): R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>| {
        ^target R|kotlin/with|<R|foo/bar/Category<Cat>|, R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|>(R|<local>/category|, <L> = with@fun R|foo/bar/Category<Cat>|.<anonymous>(): R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>| <inline=Inline, kind=EXACTLY_ONCE>  {
            ^ (this@R|special/anonymous|, this@R|foo/bar/target|).R|SubstitutionOverride<foo/bar/Category.target: R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|>|<R|A|>()
        }
        )
    }
    @R|io/github/kyay10/highkt/TypeFunction|() public abstract interface Opposite<Cat, A, B> : R|{io/github/kyay10/highkt/K2<Cat, B, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, B>, A>| {
    }
    public final typealias Opp<Arr> = R|io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Arr>|
    context(c: R|foo/bar/Category<Cat>|)
    public final fun <Cat> oppositeCategory(): R|foo/bar/Category<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, Cat>|>(R|<local>/c|)
        ^oppositeCategory object : R|foo/bar/Category<foo/bar/Opp<Cat>>| {
            private constructor(): R|foo/bar/<anonymous><Cat>| {
                super<R|kotlin/Any|>()
            }

            public open override fun <A, B, C> R|{io/github/kyay10/highkt/K2<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, B>, C>|.compose(g: R|{io/github/kyay10/highkt/K2<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>, B>|): R|{io/github/kyay10/highkt/K2<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>, C>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|{io/github/kyay10/highkt/K2<Cat, B, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, B>, A>|>(R|<local>/g|)
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|{io/github/kyay10/highkt/K2<Cat, C, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, C>, B>|>(this@R|foo/bar/<anonymous>.compose|)
                ^compose context(R|<local>/c|) R|<local>/g|.R|foo/bar/compose|<R|Cat|, R|C|, R|B|, R|A|>(this@R|foo/bar/<anonymous>.compose|).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>, C>|>()
            }

            public open override fun <A> R|{io/github/kyay10/highkt/K2<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A, *>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>, *>|.source(): R|{foo/bar/Obj<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>, A>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|{io/github/kyay10/highkt/K2<Cat, *, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, *>, A>|>(this@R|foo/bar/<anonymous>.source|)
                ^source context(R|<local>/c|) this@R|foo/bar/<anonymous>.source|.R|foo/bar/target|<R|Cat|, R|A|>().R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Obj<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>, A>|>()
            }

            public open override fun <A> R|{io/github/kyay10/highkt/K2<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, *, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, *>, A>|.target(): R|{foo/bar/Obj<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>, A>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|{io/github/kyay10/highkt/K2<Cat, A, *>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, *>|>(this@R|foo/bar/<anonymous>.target|)
                ^target context(R|<local>/c|) this@R|foo/bar/<anonymous>.target|.R|foo/bar/source|<R|Cat|, R|A|>().R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Obj<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Opp<Cat>=} io/github/kyay10/highkt/K<foo/bar/Opposite<*, *, *>, Cat>, A>, A>|>()
            }

        }

    }
    public final typealias Arrow<A, B> = R|(A) -> B|
    public final typealias ArrowK = R|{foo/bar/Arrow<*, *>=} (*) -> *|
    public final fun <A> idArrow(): R|{foo/bar/Arrow<A, A>=} (A) -> A| {
        ^idArrow fun <anonymous>(a: R|A|): R|A| <inline=NoInline>  {
            ^ R|<local>/a|
        }

    }
    public final object ArrowCategory : R|foo/bar/Category<foo/bar/ArrowK>| {
        private constructor(): R|foo/bar/ArrowCategory| {
            super<R|kotlin/Any|>()
        }

        public open override fun <A, B, C> R|{io/github/kyay10/highkt/K2<{foo/bar/ArrowK=} kotlin/Function1<*, *>, B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, B>, C>|.compose(g: R|{io/github/kyay10/highkt/K2<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>, B>|): R|{io/github/kyay10/highkt/K2<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>, C>| {
            Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|it(kotlin/Function1<A, B> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Function1<*, *>, A>, B>)|>(R|<local>/g|)
            Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|it(kotlin/Function1<B, C> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Function1<*, *>, B>, C>)|>(this@R|foo/bar/ArrowCategory.compose|)
            ^compose fun <anonymous>(a: R|A|): R|C| <inline=NoInline>  {
                ^ this@R|foo/bar/ArrowCategory.compose|.R|SubstitutionOverride<kotlin/Function1.invoke: R|C|>|(R|<local>/g|.R|SubstitutionOverride<kotlin/Function1.invoke: R|B|>|(R|<local>/a|))
            }
            .R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>, C>|>()
        }

        public open override fun <A> R|{io/github/kyay10/highkt/K2<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A, *>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>, *>|.source(): R|{foo/bar/Obj<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>, A>| {
            Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|it(kotlin/Function1<A, *> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Function1<*, *>, A>, *>)|>(this@R|foo/bar/ArrowCategory.source|)
            ^source R|foo/bar/idArrow|<R|A|>()
        }

        public open override fun <A> R|{io/github/kyay10/highkt/K2<{foo/bar/ArrowK=} kotlin/Function1<*, *>, *, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, *>, A>|.target(): R|{foo/bar/Obj<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>, A>| {
            Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|it(kotlin/Function1<*, A> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Function1<*, *>, *>, A>)|>(this@R|foo/bar/ArrowCategory.target|)
            ^target R|foo/bar/idArrow|<R|A|>()
        }

    }
    @R|io/github/kyay10/highkt/TypeFunction|() public abstract interface TypePaired<A, B, F> : R|{io/github/kyay10/highkt/K2<F, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<F, A>, B>| {
    }
    public final typealias TypePair<A, B> = R|{io/github/kyay10/highkt/K2<foo/bar/TypePaired<*, *, *>, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>|
    @R|io/github/kyay10/highkt/TypeFunction|() public abstract interface TypePairedFirst<A, B> : R|io/github/kyay10/highkt/Id<A>| {
    }
    public final typealias TypePairFirst<P> = R|io/github/kyay10/highkt/K<P, foo/bar/TypePairedFirst<*, *>>|
    @R|io/github/kyay10/highkt/TypeFunction|() public abstract interface TypePairedSecond<A, B> : R|io/github/kyay10/highkt/Id<B>| {
    }
    public final typealias TypePairSecond<P> = R|io/github/kyay10/highkt/K<P, foo/bar/TypePairedSecond<*, *>>|
    @R|io/github/kyay10/highkt/TypeFunction|() public abstract interface MorphismProduct<C1, C2, PA, PB> : R|{io/github/kyay10/highkt/K2<kotlin/Pair<*, *>, {io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<PA>, foo/bar/TypePairFirst<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<PA>>, foo/bar/TypePairFirst<PB>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<PA>, foo/bar/TypePairSecond<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<PA>>, foo/bar/TypePairSecond<PB>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Pair<*, *>, {io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<PA>, foo/bar/TypePairFirst<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<PA>>, foo/bar/TypePairFirst<PB>>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<PA>, foo/bar/TypePairSecond<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<PA>>, foo/bar/TypePairSecond<PB>>>| {
    }
    public final typealias Product<C1, C2> = R|{io/github/kyay10/highkt/K2<foo/bar/MorphismProduct<*, *, *, *>, C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>|
    context(<unused var>: R|foo/bar/Category<C1>|, <unused var>: R|foo/bar/Category<C2>|)
    public final fun <C1, C2> productCategory(): R|foo/bar/Category<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, C1>|>(R|<local>/<unused var>|)
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, C2>|>(R|<local>/<unused var>|)
        ^productCategory object : R|foo/bar/Category<foo/bar/Product<C1, C2>>| {
            private constructor(): R|foo/bar/<anonymous><C1, C2>| {
                super<R|kotlin/Any|>()
            }

            public open override fun <PA, PB, PC> R|{io/github/kyay10/highkt/K2<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, PB, PC>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, PB>, PC>|.compose(g: R|{io/github/kyay10/highkt/K2<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, PA, PB>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, PA>, PB>|): R|{io/github/kyay10/highkt/K2<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, PA, PC>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, PA>, PC>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType<CS errors: io/github/kyay10/highkt/assertIsType>#|<R|it(kotlin/Pair<{io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<PA>, foo/bar/TypePairFirst<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<PA>>, foo/bar/TypePairFirst<PB>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<PA>, foo/bar/TypePairSecond<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<PA>>, foo/bar/TypePairSecond<PB>>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Pair<*, *>, {io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<PA>, foo/bar/TypePairFirst<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<PA>>, foo/bar/TypePairFirst<PB>>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<PA>, foo/bar/TypePairSecond<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<PA>>, foo/bar/TypePairSecond<PB>>>)|>(R|<local>/g|)
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType<CS errors: io/github/kyay10/highkt/assertIsType>#|<R|it(kotlin/Pair<{io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<PB>, foo/bar/TypePairFirst<PC>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<PB>>, foo/bar/TypePairFirst<PC>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<PB>, foo/bar/TypePairSecond<PC>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<PB>>, foo/bar/TypePairSecond<PC>>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Pair<*, *>, {io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<PB>, foo/bar/TypePairFirst<PC>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<PB>>, foo/bar/TypePairFirst<PC>>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<PB>, foo/bar/TypePairSecond<PC>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<PB>>, foo/bar/TypePairSecond<PC>>>)|>(this@R|foo/bar/<anonymous>.compose|)
                lval newFirst: R|{io/github/kyay10/highkt/K2<C1, {foo/bar/TypePairFirst<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedFirst<*, *>>, {foo/bar/TypePairFirst<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedFirst<*, *>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, {foo/bar/TypePairFirst<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedFirst<*, *>>>, {foo/bar/TypePairFirst<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedFirst<*, *>>>| = context(R|<local>/<unused var>|) this@R|foo/bar/<anonymous>.compose|.R|SubstitutionOverride<kotlin/Pair.first: R|{io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<PB>, foo/bar/TypePairFirst<PC>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<PB>>, foo/bar/TypePairFirst<PC>>|>|.R|foo/bar/compose|<R|C1|, R|{foo/bar/TypePairFirst<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedFirst<*, *>>|, R|{foo/bar/TypePairFirst<PB>=} io/github/kyay10/highkt/K<PB, foo/bar/TypePairedFirst<*, *>>|, R|{foo/bar/TypePairFirst<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedFirst<*, *>>|>(R|<local>/g|.R|SubstitutionOverride<kotlin/Pair.first: R|{io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<PA>, foo/bar/TypePairFirst<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<PA>>, foo/bar/TypePairFirst<PB>>|>|)
                Q|kotlin/Unit|
                lval newSecond: R|{io/github/kyay10/highkt/K2<C2, {foo/bar/TypePairSecond<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedSecond<*, *>>, {foo/bar/TypePairSecond<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedSecond<*, *>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, {foo/bar/TypePairSecond<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedSecond<*, *>>>, {foo/bar/TypePairSecond<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedSecond<*, *>>>| = context(R|<local>/<unused var>|) this@R|foo/bar/<anonymous>.compose|.R|SubstitutionOverride<kotlin/Pair.second: R|{io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<PB>, foo/bar/TypePairSecond<PC>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<PB>>, foo/bar/TypePairSecond<PC>>|>|.R|foo/bar/compose|<R|C2|, R|{foo/bar/TypePairSecond<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedSecond<*, *>>|, R|{foo/bar/TypePairSecond<PB>=} io/github/kyay10/highkt/K<PB, foo/bar/TypePairedSecond<*, *>>|, R|{foo/bar/TypePairSecond<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedSecond<*, *>>|>(R|<local>/g|.R|SubstitutionOverride<kotlin/Pair.second: R|{io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<PA>, foo/bar/TypePairSecond<PB>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<PA>>, foo/bar/TypePairSecond<PB>>|>|)
                Q|kotlin/Unit|
                ^compose R|<local>/newFirst|.R|kotlin/to|<R|{io/github/kyay10/highkt/K2<C1, {foo/bar/TypePairFirst<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedFirst<*, *>>, {foo/bar/TypePairFirst<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedFirst<*, *>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, {foo/bar/TypePairFirst<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedFirst<*, *>>>, {foo/bar/TypePairFirst<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedFirst<*, *>>>|, R|{io/github/kyay10/highkt/K2<C2, {foo/bar/TypePairSecond<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedSecond<*, *>>, {foo/bar/TypePairSecond<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedSecond<*, *>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, {foo/bar/TypePairSecond<PA>=} io/github/kyay10/highkt/K<PA, foo/bar/TypePairedSecond<*, *>>>, {foo/bar/TypePairSecond<PC>=} io/github/kyay10/highkt/K<PC, foo/bar/TypePairedSecond<*, *>>>|>(R|<local>/newSecond|).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, PA, PC>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, PA>, PC>|>()
            }

            public open override fun <P> R|{io/github/kyay10/highkt/K2<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P, *>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P>, *>|.source(): R|{foo/bar/Obj<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P>, P>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType<CS errors: io/github/kyay10/highkt/assertIsType>#|<R|it(kotlin/Pair<{io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<P>, foo/bar/TypePairFirst<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<P>>, foo/bar/TypePairFirst<*>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<P>, foo/bar/TypePairSecond<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<P>>, foo/bar/TypePairSecond<*>>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Pair<*, *>, {io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<P>, foo/bar/TypePairFirst<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<P>>, foo/bar/TypePairFirst<*>>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<P>, foo/bar/TypePairSecond<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<P>>, foo/bar/TypePairSecond<*>>>)|>(this@R|foo/bar/<anonymous>.source|)
                ^source context(R|<local>/<unused var>|) this@R|foo/bar/<anonymous>.source|.R|SubstitutionOverride<kotlin/Pair.first: R|{io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<P>, foo/bar/TypePairFirst<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<P>>, foo/bar/TypePairFirst<*>>|>|.R|foo/bar/source|<R|C1|, R|{foo/bar/TypePairFirst<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedFirst<*, *>>|>().R|kotlin/to|<R|{foo/bar/Obj<C1, {foo/bar/TypePairFirst<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedFirst<*, *>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, {foo/bar/TypePairFirst<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedFirst<*, *>>>, {foo/bar/TypePairFirst<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedFirst<*, *>>>|, R|{foo/bar/Obj<C2, {foo/bar/TypePairSecond<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedSecond<*, *>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, {foo/bar/TypePairSecond<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedSecond<*, *>>>, {foo/bar/TypePairSecond<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedSecond<*, *>>>|>(context(R|<local>/<unused var>|) this@R|foo/bar/<anonymous>.source|.R|SubstitutionOverride<kotlin/Pair.second: R|{io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<P>, foo/bar/TypePairSecond<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<P>>, foo/bar/TypePairSecond<*>>|>|.R|foo/bar/source|<R|C2|, R|{foo/bar/TypePairSecond<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedSecond<*, *>>|>()).R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Obj<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P>, P>|>()
            }

            public open override fun <P> R|{io/github/kyay10/highkt/K2<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, *, P>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, *>, P>|.target(): R|{foo/bar/Obj<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P>, P>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType<CS errors: io/github/kyay10/highkt/assertIsType>#|<R|it(kotlin/Pair<{io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<*>, foo/bar/TypePairFirst<P>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<*>>, foo/bar/TypePairFirst<P>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<*>, foo/bar/TypePairSecond<P>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<*>>, foo/bar/TypePairSecond<P>>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Pair<*, *>, {io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<*>, foo/bar/TypePairFirst<P>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<*>>, foo/bar/TypePairFirst<P>>>, {io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<*>, foo/bar/TypePairSecond<P>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<*>>, foo/bar/TypePairSecond<P>>>)|>(this@R|foo/bar/<anonymous>.target|)
                ^target context(R|<local>/<unused var>|) this@R|foo/bar/<anonymous>.target|.R|SubstitutionOverride<kotlin/Pair.first: R|{io/github/kyay10/highkt/K2<C1, foo/bar/TypePairFirst<*>, foo/bar/TypePairFirst<P>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, foo/bar/TypePairFirst<*>>, foo/bar/TypePairFirst<P>>|>|.R|foo/bar/target|<R|C1|, R|{foo/bar/TypePairFirst<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedFirst<*, *>>|>().R|kotlin/to|<R|{foo/bar/Obj<C1, {foo/bar/TypePairFirst<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedFirst<*, *>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C1, {foo/bar/TypePairFirst<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedFirst<*, *>>>, {foo/bar/TypePairFirst<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedFirst<*, *>>>|, R|{foo/bar/Obj<C2, {foo/bar/TypePairSecond<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedSecond<*, *>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, {foo/bar/TypePairSecond<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedSecond<*, *>>>, {foo/bar/TypePairSecond<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedSecond<*, *>>>|>(context(R|<local>/<unused var>|) this@R|foo/bar/<anonymous>.target|.R|SubstitutionOverride<kotlin/Pair.second: R|{io/github/kyay10/highkt/K2<C2, foo/bar/TypePairSecond<*>, foo/bar/TypePairSecond<P>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C2, foo/bar/TypePairSecond<*>>, foo/bar/TypePairSecond<P>>|>|.R|foo/bar/target|<R|C2|, R|{foo/bar/TypePairSecond<P>=} io/github/kyay10/highkt/K<P, foo/bar/TypePairedSecond<*, *>>|>()).R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Obj<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<C1, C2>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, C1>, C2>, P>, P>|>()
            }

        }

    }
    public abstract interface Functor<C, D, F> : R|kotlin/Any| {
        public abstract val firstCategory: R|foo/bar/Category<C>|
            public get(): R|foo/bar/Category<C>|

        public abstract val secondCategory: R|foo/bar/Category<D>|
            public get(): R|foo/bar/Category<D>|

        public abstract fun <A, B> lift(f: R|{io/github/kyay10/highkt/K2<C, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, A>, B>|): R|{io/github/kyay10/highkt/K2<D, io/github/kyay10/highkt/K<F, A>, io/github/kyay10/highkt/K<F, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<F, B>>|

    }
    context(c: R|foo/bar/Category<C>|)
    public final fun <C> identityFunctor(): R|foo/bar/Functor<C, C, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, C>|>(R|<local>/c|)
        ^identityFunctor object : R|foo/bar/Functor<C, C, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>| {
            private constructor(): R|foo/bar/<anonymous><C>| {
                super<R|kotlin/Any|>()
            }

            public open override val firstCategory: R|foo/bar/Category<C>| = R|<local>/c|
                public get(): R|foo/bar/Category<C>|

            public open override val secondCategory: R|foo/bar/Category<C>| = R|<local>/c|
                public get(): R|foo/bar/Category<C>|

            public open override fun <A, B> lift(f: R|{io/github/kyay10/highkt/K2<C, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, A>, B>|): R|{io/github/kyay10/highkt/K2<C, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>>, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, B>>| {
                ^lift R|<local>/f|.R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<C, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>>, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, B>>|>()
            }

        }

    }
    @R|io/github/kyay10/highkt/TypeFunction|() public abstract interface Composition<F, G, A> : R|io/github/kyay10/highkt/K<F, io/github/kyay10/highkt/K<G, A>>| {
    }
    public final typealias Compose<F, G> = R|{io/github/kyay10/highkt/K2<foo/bar/Composition<*, *, *>, F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>|
    context(f: R|foo/bar/Functor<D, E, F>|, g: R|foo/bar/Functor<C, D, G>|)
    public final fun <C, D, E, F, G> composeFunctors(): R|foo/bar/Functor<C, E, {foo/bar/Compose<F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, D>, E>, F>|>(R|<local>/f|)
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, C>, D>, G>|>(R|<local>/g|)
        ^composeFunctors object : R|foo/bar/Functor<C, E, foo/bar/Compose<F, G>>| {
            private constructor(): R|foo/bar/<anonymous><C, D, E, F, G>| {
                super<R|kotlin/Any|>()
            }

            public open override val firstCategory: R|foo/bar/Category<C>| = R|<local>/g|.R|SubstitutionOverride<foo/bar/Functor.firstCategory: R|foo/bar/Category<C>|>|
                public get(): R|foo/bar/Category<C>|

            public open override val secondCategory: R|foo/bar/Category<E>| = R|<local>/f|.R|SubstitutionOverride<foo/bar/Functor.secondCategory: R|foo/bar/Category<E>|>|
                public get(): R|foo/bar/Category<E>|

            public open override fun <A, B> lift(h: R|{io/github/kyay10/highkt/K2<C, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, A>, B>|): R|{io/github/kyay10/highkt/K2<E, io/github/kyay10/highkt/K<{foo/bar/Compose<F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>, A>, io/github/kyay10/highkt/K<{foo/bar/Compose<F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<E, io/github/kyay10/highkt/K<{foo/bar/Compose<F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>, A>>, io/github/kyay10/highkt/K<{foo/bar/Compose<F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>, B>>| {
                ^lift context(R|<local>/f|) R|foo/bar/lift|<R|D|, R|E|, R|F|, R|io/github/kyay10/highkt/K<G, A>|, R|io/github/kyay10/highkt/K<G, B>|>(context(R|<local>/g|) R|foo/bar/lift|<R|C|, R|D|, R|G|, R|A|, R|B|>(R|<local>/h|)).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<E, io/github/kyay10/highkt/K<{foo/bar/Compose<F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>, A>, io/github/kyay10/highkt/K<{foo/bar/Compose<F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<E, io/github/kyay10/highkt/K<{foo/bar/Compose<F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>, A>>, io/github/kyay10/highkt/K<{foo/bar/Compose<F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, F>, G>, B>>|>()
            }

        }

    }
    context(functor: R|foo/bar/Functor<C, D, F>|)
    public final fun <C, D, F, A, B> lift(f: R|{io/github/kyay10/highkt/K2<C, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, A>, B>|): R|{io/github/kyay10/highkt/K2<D, io/github/kyay10/highkt/K<F, A>, io/github/kyay10/highkt/K<F, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<F, B>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, C>, D>, F>|>(R|<local>/functor|)
        ^lift R|kotlin/with|<R|it(io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, C>, D>, F> & foo/bar/Functor<C, D, F>)|, R|{io/github/kyay10/highkt/K2<D, io/github/kyay10/highkt/K<F, A>, io/github/kyay10/highkt/K<F, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<F, B>>|>(R|<local>/functor|, <L> = with@fun R|it(io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, C>, D>, F> & foo/bar/Functor<C, D, F>)|.<anonymous>(): R|{io/github/kyay10/highkt/K2<D, io/github/kyay10/highkt/K<F, A>, io/github/kyay10/highkt/K<F, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<F, B>>| <inline=Inline, kind=EXACTLY_ONCE>  {
            ^ this@R|special/anonymous|.R|SubstitutionOverride<foo/bar/Functor.lift: R|{io/github/kyay10/highkt/K2<D, io/github/kyay10/highkt/K<F, A>, io/github/kyay10/highkt/K<F, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<F, B>>|>|<R|A|, R|B|>(R|<local>/f|)
        }
        )
    }
    public final typealias BiFunctor<C, D, E, F> = R|foo/bar/Functor<foo/bar/Product<C, D>, E, F>|
    public final typealias EndoBiFunctor<C, F> = R|{foo/bar/BiFunctor<C, C, C, F>=} foo/bar/Functor<foo/bar/Product<C, C>, C, F>|
    public final typealias Component<D, F, G, A> = R|{io/github/kyay10/highkt/K2<D, io/github/kyay10/highkt/K<F, A>, io/github/kyay10/highkt/K<G, A>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<G, A>>|
    public abstract interface Nat<C, D, F, G> : R|{io/github/kyay10/highkt/K2<foo/bar/NatK<C, D>, F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/NatK<C, D>, F>, G>| {
        public abstract val firstFunctor: R|foo/bar/Functor<C, D, F>|
            public get(): R|foo/bar/Functor<C, D, F>|

        public abstract val secondFunctor: R|foo/bar/Functor<C, D, G>|
            public get(): R|foo/bar/Functor<C, D, G>|

        public abstract operator fun <A> get(c: R|{foo/bar/Obj<C, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, A>, A>|): R|{foo/bar/Component<D, F, G, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<G, A>>|

    }
    public final typealias NatK<C, D> = R|{io/github/kyay10/highkt/K2<foo/bar/Nat<*, *, *, *>, C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>|
    public final fun <C, D, F, G, A, B> R|foo/bar/Nat<C, D, F, G>|.at(h: R|{io/github/kyay10/highkt/K2<C, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, A>, B>|): R|{io/github/kyay10/highkt/K2<D, io/github/kyay10/highkt/K<F, A>, io/github/kyay10/highkt/K<G, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<G, B>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, G>|>(this@R|foo/bar/at|)
        ^at R|kotlin/context|<R|foo/bar/Functor<C, D, F>|, R|foo/bar/Category<C>|, R|foo/bar/Category<D>|, R|{io/github/kyay10/highkt/K2<D, io/github/kyay10/highkt/K<F, A>, io/github/kyay10/highkt/K<G, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<G, B>>|>(this@R|foo/bar/at|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<C, D, F>|>|, this@R|foo/bar/at|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<C, D, F>|>|.R|SubstitutionOverride<foo/bar/Functor.firstCategory: R|foo/bar/Category<C>|>|, this@R|foo/bar/at|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<C, D, F>|>|.R|SubstitutionOverride<foo/bar/Functor.secondCategory: R|foo/bar/Category<D>|>|, <L> = context(<unused var>: R|foo/bar/Functor<C, D, F>|, <unused var>: R|foo/bar/Category<C>|, <unused var>: R|foo/bar/Category<D>|) context@fun <anonymous>(): R|{io/github/kyay10/highkt/K2<D, io/github/kyay10/highkt/K<F, A>, io/github/kyay10/highkt/K<G, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<G, B>>| <inline=Inline, kind=EXACTLY_ONCE>  {
            ^ context(R|<local>/<unused var>|) this@R|foo/bar/at|.R|SubstitutionOverride<foo/bar/Nat.get: R|{foo/bar/Component<D, F, G, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<G, A>>|>|<R|B|>(context(R|<local>/<unused var>|) R|<local>/h|.R|foo/bar/target|<R|C|, R|B|>()).R|foo/bar/compose|<R|D|, R|io/github/kyay10/highkt/K<F, A>|, R|io/github/kyay10/highkt/K<F, B>|, R|io/github/kyay10/highkt/K<G, B>|>(context(R|<local>/<unused var>|) R|foo/bar/lift|<R|C|, R|D|, R|F|, R|A|, R|B|>(R|<local>/h|))
        }
        )
    }
    public final typealias Endo<C, F, G> = R|foo/bar/Nat<C, C, F, G>|
    public final typealias EndoK<C> = R|{foo/bar/NatK<C, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, C>|
    public final typealias NormalNat<F, G> = R|{foo/bar/Endo<foo/bar/ArrowK, F, G>=} foo/bar/Nat<foo/bar/ArrowK, foo/bar/ArrowK, F, G>|
    public final typealias NormalNatK = R|{foo/bar/EndoK<foo/bar/ArrowK>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, foo/bar/ArrowK>, foo/bar/ArrowK>|
    public abstract interface Iso<C, D, F, G> : R|foo/bar/Nat<C, D, F, G>| {
        public abstract val inv: R|foo/bar/Iso<C, D, G, F>|
            public get(): R|foo/bar/Iso<C, D, G, F>|

    }
    public final fun <C, D, F, G> Iso(to: R|foo/bar/Nat<C, D, F, G>|, from: R|foo/bar/Nat<C, D, G, F>|): R|foo/bar/Iso<C, D, F, G>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, G>|>(R|<local>/to|)
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, G>, F>|>(R|<local>/from|)
        ^Iso object : R|foo/bar/Iso<C, D, F, G>|, R|foo/bar/Nat<C, D, F, G>| {
            private constructor(): R|foo/bar/<anonymous><C, D, F, G>| {
                super<R|kotlin/Any|>()
            }

            private final field $$delegate_0: R|foo/bar/Nat<C, D, F, G>| = R|<local>/to|

            public open override val inv: R|foo/bar/Iso<C, D, G, F>| = R|foo/bar/Iso|<R|C|, R|D|, R|G|, R|F|>(R|<local>/from|, this@R|foo/bar/<anonymous>|)
                public get(): R|foo/bar/Iso<C, D, G, F>|

        }

    }
    private final fun <C, D, F, G> Iso(to: R|foo/bar/Nat<C, D, F, G>|, from: R|foo/bar/Iso<C, D, G, F>|): R|foo/bar/Iso<C, D, F, G>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, G>|>(R|<local>/to|)
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Iso<*, *, *, *>, C>, D>, G>, F>|>(R|<local>/from|)
        ^Iso object : R|foo/bar/Iso<C, D, F, G>|, R|foo/bar/Nat<C, D, F, G>| {
            private constructor(): R|foo/bar/<anonymous><C, D, F, G>| {
                super<R|kotlin/Any|>()
            }

            private final field $$delegate_0: R|foo/bar/Nat<C, D, F, G>| = R|<local>/to|

            public open override val inv: R|foo/bar/Iso<C, D, G, F>| = R|<local>/from|
                public get(): R|foo/bar/Iso<C, D, G, F>|

        }

    }
    public final typealias IsoK<C, D> = R|{io/github/kyay10/highkt/K2<foo/bar/Iso<*, *, *, *>, C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Iso<*, *, *, *>, C>, D>|
    context(functor: R|foo/bar/Functor<C, D, F>|)
    public final fun <C, D, F> identityNat(): R|foo/bar/Iso<C, D, F, F>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, C>, D>, F>|>(R|<local>/functor|)
        lval nat: R|foo/bar/<anonymous><C, D, F>| = object : R|foo/bar/Nat<C, D, F, F>| {
            private constructor(): R|foo/bar/<anonymous><C, D, F>| {
                super<R|kotlin/Any|>()
            }

            public open override val firstFunctor: R|foo/bar/Functor<C, D, F>| = R|<local>/functor|
                public get(): R|foo/bar/Functor<C, D, F>|

            public open override val secondFunctor: R|foo/bar/Functor<C, D, F>| = R|<local>/functor|
                public get(): R|foo/bar/Functor<C, D, F>|

            public open override operator fun <A> get(c: R|{foo/bar/Obj<C, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, A>, A>|): R|{foo/bar/Component<D, F, F, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<F, A>>| {
                ^get context(R|<local>/functor|) R|foo/bar/lift|<R|C|, R|D|, R|F|, R|A|, R|A|>(R|<local>/c|)
            }

        }

        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/<anonymous><*, *, *>, C>, D>, F>|>(R|<local>/nat|)
        ^identityNat R|foo/bar/Iso|<R|C|, R|D|, R|F|, R|F|>(R|<local>/nat|, R|<local>/nat|)
    }
    public final infix fun <C, D, E, F, G, I, J> R|foo/bar/Nat<D, E, I, J>|.horizontal(other: R|foo/bar/Nat<C, D, F, G>|): R|foo/bar/Nat<C, E, {foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>, {foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, G>|>(R|<local>/other|)
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, I>, J>|>(this@R|foo/bar/horizontal|)
        ^horizontal object : R|foo/bar/Nat<C, E, foo/bar/Compose<I, F>, foo/bar/Compose<J, G>>| {
            private constructor(): R|foo/bar/<anonymous><C, D, E, F, G, I, J>| {
                super<R|kotlin/Any|>()
            }

            public open override val firstFunctor: R|foo/bar/Functor<C, E, {foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>>| = R|kotlin/context|<R|foo/bar/Functor<D, E, I>|, R|foo/bar/Functor<C, D, F>|, R|it(foo/bar/Functor<C, E, {foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, C>, E>, {foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>>)|>(this@R|foo/bar/horizontal|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<D, E, I>|>|, R|<local>/other|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<C, D, F>|>|, <L> = context(<unused var>: R|foo/bar/Functor<D, E, I>|, <unused var>: R|foo/bar/Functor<C, D, F>|) context@fun <anonymous>(): R|it(foo/bar/Functor<C, E, {foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, C>, E>, {foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                ^ context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|C|, R|D|, R|E|, R|I|, R|F|>()
            }
            )
                public get(): R|foo/bar/Functor<C, E, {foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>>|

            public open override val secondFunctor: R|foo/bar/Functor<C, E, {foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>>| = R|kotlin/context|<R|foo/bar/Functor<D, E, J>|, R|foo/bar/Functor<C, D, G>|, R|it(foo/bar/Functor<C, E, {foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, C>, E>, {foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>>)|>(this@R|foo/bar/horizontal|.R|SubstitutionOverride<foo/bar/Nat.secondFunctor: R|foo/bar/Functor<D, E, J>|>|, R|<local>/other|.R|SubstitutionOverride<foo/bar/Nat.secondFunctor: R|foo/bar/Functor<C, D, G>|>|, <L> = context(<unused var>: R|foo/bar/Functor<D, E, J>|, <unused var>: R|foo/bar/Functor<C, D, G>|) context@fun <anonymous>(): R|it(foo/bar/Functor<C, E, {foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, C>, E>, {foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                ^ context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|C|, R|D|, R|E|, R|J|, R|G|>()
            }
            )
                public get(): R|foo/bar/Functor<C, E, {foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>>|

            public open override operator fun <A> get(c: R|{foo/bar/Obj<C, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, A>, A>|): R|{foo/bar/Component<E, {foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>, {foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<E, io/github/kyay10/highkt/K<{foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>, A>>, io/github/kyay10/highkt/K<{foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>, A>>| {
                ^get this@R|foo/bar/horizontal|.R|foo/bar/at|<R|D|, R|E|, R|I|, R|J|, R|io/github/kyay10/highkt/K<F, A>|, R|io/github/kyay10/highkt/K<G, A>|>(R|<local>/other|.R|foo/bar/at|<R|C|, R|D|, R|F|, R|G|, R|A|, R|A|>(R|<local>/c|)).R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Component<E, {foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>, {foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<E, io/github/kyay10/highkt/K<{foo/bar/Compose<I, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, I>, F>, A>>, io/github/kyay10/highkt/K<{foo/bar/Compose<J, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, J>, G>, A>>|>()
            }

        }

    }
    context(<unused var>: R|foo/bar/Category<D>|)
    public final infix fun <C, D, F, G, H> R|foo/bar/Nat<C, D, G, H>|.vertical(other: R|foo/bar/Nat<C, D, F, G>|): R|foo/bar/Nat<C, D, F, H>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, D>|>(R|<local>/<unused var>|)
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, G>|>(R|<local>/other|)
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, G>, H>|>(this@R|foo/bar/vertical|)
        ^vertical object : R|foo/bar/Nat<C, D, F, H>| {
            private constructor(): R|foo/bar/<anonymous><C, D, F, G, H>| {
                super<R|kotlin/Any|>()
            }

            public open override val firstFunctor: R|foo/bar/Functor<C, D, F>| = R|<local>/other|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<C, D, F>|>|
                public get(): R|foo/bar/Functor<C, D, F>|

            public open override val secondFunctor: R|foo/bar/Functor<C, D, H>| = this@R|foo/bar/vertical|.R|SubstitutionOverride<foo/bar/Nat.secondFunctor: R|foo/bar/Functor<C, D, H>|>|
                public get(): R|foo/bar/Functor<C, D, H>|

            public open override operator fun <A> get(c: R|{foo/bar/Obj<C, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<C, A>, A>|): R|{foo/bar/Component<D, F, H, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<H, A>>| {
                ^get context(R|<local>/<unused var>|) this@R|foo/bar/vertical|.R|SubstitutionOverride<foo/bar/Nat.get: R|{foo/bar/Component<D, G, H, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<G, A>>, io/github/kyay10/highkt/K<H, A>>|>|<R|A|>(R|<local>/c|).R|foo/bar/compose|<R|D|, R|io/github/kyay10/highkt/K<F, A>|, R|io/github/kyay10/highkt/K<G, A>|, R|io/github/kyay10/highkt/K<H, A>|>(R|<local>/other|.R|SubstitutionOverride<foo/bar/Nat.get: R|{foo/bar/Component<D, F, G, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<D, io/github/kyay10/highkt/K<F, A>>, io/github/kyay10/highkt/K<G, A>>|>|<R|A|>(R|<local>/c|))
            }

        }

    }
    context(cd: R|foo/bar/Category<D>|)
    public final fun <C, D> functorCategory(): R|foo/bar/Category<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, D>|>(R|<local>/cd|)
        ^functorCategory object : R|foo/bar/Category<foo/bar/NatK<C, D>>| {
            private constructor(): R|foo/bar/<anonymous><C, D>| {
                super<R|kotlin/Any|>()
            }

            public open override fun <F, G, H> R|{io/github/kyay10/highkt/K2<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, G, H>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, G>, H>|.compose(g: R|{io/github/kyay10/highkt/K2<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F, G>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, G>|): R|{io/github/kyay10/highkt/K2<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F, H>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, H>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<C, D, F, G>|>(R|<local>/g|)
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<C, D, G, H>|>(this@R|foo/bar/<anonymous>.compose|)
                ^compose R|kotlin/context|<R|it(io/github/kyay10/highkt/K<foo/bar/Category<*>, D> & foo/bar/Category<D>)|, R|foo/bar/Nat<C, D, F, H>|>(R|<local>/cd|, <L> = context(<unused var>: R|it(io/github/kyay10/highkt/K<foo/bar/Category<*>, D> & foo/bar/Category<D>)|) context@fun <anonymous>(): R|foo/bar/Nat<C, D, F, H>| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ context(R|<local>/<unused var>|) this@R|foo/bar/<anonymous>.compose|.R|foo/bar/vertical|<R|C|, R|D|, R|F|, R|G|, R|H|>(R|<local>/g|)
                }
                )
            }

            public open override fun <F> R|{io/github/kyay10/highkt/K2<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F, *>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, *>|.source(): R|{foo/bar/Obj<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, F>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<C, D, F, *>|>(this@R|foo/bar/<anonymous>.source|)
                ^source R|kotlin/context|<R|foo/bar/Functor<C, D, F>|, R|it(foo/bar/Iso<C, D, F, F> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Iso<*, *, *, *>, C>, D>, F>, F>)|>(this@R|foo/bar/<anonymous>.source|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<C, D, F>|>|, <L> = context(<unused var>: R|foo/bar/Functor<C, D, F>|) context@fun <anonymous>(): R|it(foo/bar/Iso<C, D, F, F> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Iso<*, *, *, *>, C>, D>, F>, F>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ context(R|<local>/<unused var>|) R|foo/bar/identityNat|<R|C|, R|D|, R|F|>()
                }
                )
            }

            public open override fun <F> R|{io/github/kyay10/highkt/K2<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, *, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, *>, F>|.target(): R|{foo/bar/Obj<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>, F>, F>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<C, D, *, F>|>(this@R|foo/bar/<anonymous>.target|)
                ^target R|kotlin/context|<R|foo/bar/Functor<C, D, F>|, R|it(foo/bar/Iso<C, D, F, F> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Iso<*, *, *, *>, C>, D>, F>, F>)|>(this@R|foo/bar/<anonymous>.target|.R|SubstitutionOverride<foo/bar/Nat.secondFunctor: R|foo/bar/Functor<C, D, F>|>|, <L> = context(<unused var>: R|foo/bar/Functor<C, D, F>|) context@fun <anonymous>(): R|it(foo/bar/Iso<C, D, F, F> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Iso<*, *, *, *>, C>, D>, F>, F>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ context(R|<local>/<unused var>|) R|foo/bar/identityNat|<R|C|, R|D|, R|F|>()
                }
                )
            }

        }

    }
    @R|io/github/kyay10/highkt/TypeFunction|() public abstract interface FunctorCompose<P> : R|{foo/bar/Compose<foo/bar/TypePairFirst<P>, foo/bar/TypePairSecond<P>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, foo/bar/TypePairFirst<P>>, foo/bar/TypePairSecond<P>>| {
    }
    context(<unused var>: R|foo/bar/Category<C>|, <unused var>: R|foo/bar/Category<D>|, <unused var>: R|foo/bar/Category<E>|)
    public final fun <C, D, E> functorComposeFunctor(): R|foo/bar/Functor<{foo/bar/Product<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>, {foo/bar/NatK<C, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, E>, foo/bar/FunctorCompose<*>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, C>|>(R|<local>/<unused var>|)
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, D>|>(R|<local>/<unused var>|)
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, E>|>(R|<local>/<unused var>|)
        ^functorComposeFunctor object : R|foo/bar/Functor<foo/bar/Product<foo/bar/NatK<D, E>, foo/bar/NatK<C, D>>, foo/bar/NatK<C, E>, foo/bar/FunctorCompose<*>>| {
            private constructor(): R|foo/bar/<anonymous><C, D, E>| {
                super<R|kotlin/Any|>()
            }

            public open override val firstCategory: R|foo/bar/Category<{foo/bar/Product<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>>| = R|kotlin/context|<R|it(foo/bar/Category<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>> & io/github/kyay10/highkt/K<foo/bar/Category<*>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>)|, R|it(foo/bar/Category<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>> & io/github/kyay10/highkt/K<foo/bar/Category<*>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>)|, R|it(foo/bar/Category<{foo/bar/Product<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>> & io/github/kyay10/highkt/K<foo/bar/Category<*>, {foo/bar/Product<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>>)|>(context(R|<local>/<unused var>|) R|foo/bar/functorCategory|<R|D|, R|E|>(), context(R|<local>/<unused var>|) R|foo/bar/functorCategory|<R|C|, R|D|>(), <L> = context(<unused var>: R|it(foo/bar/Category<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>> & io/github/kyay10/highkt/K<foo/bar/Category<*>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>)|, <unused var>: R|it(foo/bar/Category<{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>> & io/github/kyay10/highkt/K<foo/bar/Category<*>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>)|) context@fun <anonymous>(): R|it(foo/bar/Category<{foo/bar/Product<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>> & io/github/kyay10/highkt/K<foo/bar/Category<*>, {foo/bar/Product<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                ^ context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/productCategory|<R|{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>|, R|{foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>|>()
            }
            )
                public get(): R|foo/bar/Category<{foo/bar/Product<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>>|

            public open override val secondCategory: R|foo/bar/Category<{foo/bar/NatK<C, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, E>>| = context(R|<local>/<unused var>|) R|foo/bar/functorCategory|<R|C|, R|E|>()
                public get(): R|foo/bar/Category<{foo/bar/NatK<C, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, E>>|

            public open override fun <A, B> lift(f: R|{io/github/kyay10/highkt/K2<{foo/bar/Product<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/Product<{foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/MorphismProduct<*, *, *, *>, {foo/bar/NatK<D, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, D>, E>>, {foo/bar/NatK<C, D>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, D>>, A>, B>|): R|{io/github/kyay10/highkt/K2<{foo/bar/NatK<C, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, E>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NatK<C, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, E>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, A>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, B>>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType<CS errors: io/github/kyay10/highkt/assertIsType>#|<R|it(kotlin/Pair<foo/bar/Nat<D, E, foo/bar/TypePairFirst<A>, foo/bar/TypePairFirst<B>>, foo/bar/Nat<C, D, foo/bar/TypePairSecond<A>, foo/bar/TypePairSecond<B>>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Pair<*, *>, foo/bar/Nat<D, E, foo/bar/TypePairFirst<A>, foo/bar/TypePairFirst<B>>>, foo/bar/Nat<C, D, foo/bar/TypePairSecond<A>, foo/bar/TypePairSecond<B>>>)|>(R|<local>/f|)
                ^lift R|<local>/f|.R|SubstitutionOverride<kotlin/Pair.first: R|foo/bar/Nat<D, E, foo/bar/TypePairFirst<A>, foo/bar/TypePairFirst<B>>|>|.R|foo/bar/horizontal|<R|C|, R|D|, R|E|, R|{foo/bar/TypePairSecond<A>=} io/github/kyay10/highkt/K<A, foo/bar/TypePairedSecond<*, *>>|, R|{foo/bar/TypePairSecond<B>=} io/github/kyay10/highkt/K<B, foo/bar/TypePairedSecond<*, *>>|, R|{foo/bar/TypePairFirst<A>=} io/github/kyay10/highkt/K<A, foo/bar/TypePairedFirst<*, *>>|, R|{foo/bar/TypePairFirst<B>=} io/github/kyay10/highkt/K<B, foo/bar/TypePairedFirst<*, *>>|>(R|<local>/f|.R|SubstitutionOverride<kotlin/Pair.second: R|foo/bar/Nat<C, D, foo/bar/TypePairSecond<A>, foo/bar/TypePairSecond<B>>|>|).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/NatK<C, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, E>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NatK<C, E>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, C>, E>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, A>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, B>>|>()
            }

        }

    }
    public abstract interface TensorProduct<Cat, F, I> : R|foo/bar/Functor<foo/bar/Product<Cat, Cat>, Cat, F>| {
        public abstract val unitObject: R|{foo/bar/Obj<Cat, I>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, I>, I>|
            public get(): R|{foo/bar/Obj<Cat, I>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, I>, I>|

        public abstract fun <A> leftUnitor(a: R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|): R|{io/github/kyay10/highkt/K2<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<I, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, I>, A>>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<I, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, I>, A>>>, A>|

        public abstract fun <A> leftUnitorInv(a: R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|): R|{io/github/kyay10/highkt/K2<Cat, A, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<I, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, I>, A>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<I, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, I>, A>>>|

        public abstract fun <A> rightUnitor(a: R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|): R|{io/github/kyay10/highkt/K2<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, I>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, I>>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, I>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, I>>>, A>|

        public abstract fun <A> rightUnitorInv(a: R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|): R|{io/github/kyay10/highkt/K2<Cat, A, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, I>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, I>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, I>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, I>>>|

        public abstract fun <A, B, C> associator(a: R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|, b: R|{foo/bar/Obj<Cat, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, B>, B>|, c: R|{foo/bar/Obj<Cat, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, C>, C>|): R|{io/github/kyay10/highkt/K2<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>>|

        public abstract fun <A, B, C> associatorInv(a: R|{foo/bar/Obj<Cat, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, A>, A>|, b: R|{foo/bar/Obj<Cat, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, B>, B>|, c: R|{foo/bar/Obj<Cat, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, C>, C>|): R|{io/github/kyay10/highkt/K2<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>>|

    }
    context(k: R|foo/bar/Category<Cat>|)
    public final fun <Cat> endoFunctorComposeTensor(): R|foo/bar/TensorProduct<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, foo/bar/FunctorCompose<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/Category<*>, Cat>|>(R|<local>/k|)
        ^endoFunctorComposeTensor object : R|foo/bar/TensorProduct<foo/bar/EndoK<Cat>, foo/bar/FunctorCompose<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>|, R|foo/bar/Functor<foo/bar/Product<foo/bar/EndoK<Cat>, foo/bar/EndoK<Cat>>, foo/bar/EndoK<Cat>, foo/bar/FunctorCompose<*>>| {
            private constructor(): R|foo/bar/<anonymous><Cat>| {
                super<R|kotlin/Any|>()
            }

            private final field $$delegate_0: R|foo/bar/Functor<foo/bar/Product<foo/bar/EndoK<Cat>, foo/bar/EndoK<Cat>>, foo/bar/EndoK<Cat>, foo/bar/FunctorCompose<*>>| = context(R|<local>/k|, R|<local>/k|, R|<local>/k|) R|foo/bar/functorComposeFunctor|<R|Cat|, R|Cat|, R|Cat|>()

            public open override val unitObject: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>| = R|kotlin/context|<R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|, R|it(foo/bar/Iso<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Iso<*, *, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|>(context(R|<local>/k|) R|foo/bar/identityFunctor|<R|Cat|>(), <L> = context(<unused var>: R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|) context@fun <anonymous>(): R|it(foo/bar/Iso<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Iso<*, *, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                ^ context(R|<local>/<unused var>|) R|foo/bar/identityNat|<R|Cat|, R|Cat|, R|{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>|>()
            }
            )
                public get(): R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>|

            public open override fun <A> leftUnitor(a: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, A>|): R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>>, A>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, A, A>|>(R|<local>/a|)
                ^leftUnitor R|kotlin/context|<R|foo/bar/Functor<Cat, Cat, A>|, R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|, R|foo/bar/<anonymous><A, Cat>|>(R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|, context(R|<local>/k|) R|foo/bar/identityFunctor|<R|Cat|>(), <L> = context(<unused var>: R|foo/bar/Functor<Cat, Cat, A>|, <unused var>: R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|) context@fun <anonymous>(): R|foo/bar/<anonymous><A, Cat>| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ object : R|foo/bar/Nat<Cat, Cat, foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>, A>| {
                        private constructor(): R|foo/bar/<anonymous><A, Cat>| {
                            super<R|kotlin/Any|>()
                        }

                        public open override val firstFunctor: R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>| = context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>|, R|A|>()
                            public get(): R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>|

                        public open override val secondFunctor: R|foo/bar/Functor<Cat, Cat, A>| = R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|
                            public get(): R|foo/bar/Functor<Cat, Cat, A>|

                        public open override operator fun <X> get(c: R|{foo/bar/Obj<Cat, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, X>, X>|): R|{foo/bar/Component<Cat, {foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>, A, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<{foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>, X>>, io/github/kyay10/highkt/K<A, X>>| {
                            ^get context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|A|, R|X|, R|X|>(R|<local>/c|).R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Component<Cat, {foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>, A, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<{foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>, X>>, io/github/kyay10/highkt/K<A, X>>|>()
                        }

                    }

                }
                ).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>>, A>|>()
            }

            public open override fun <A> leftUnitorInv(a: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, A>|): R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, A, A>|>(R|<local>/a|)
                ^leftUnitorInv R|kotlin/context|<R|foo/bar/Functor<Cat, Cat, A>|, R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|, R|foo/bar/<anonymous><A, Cat>|>(R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|, context(R|<local>/k|) R|foo/bar/identityFunctor|<R|Cat|>(), <L> = context(<unused var>: R|foo/bar/Functor<Cat, Cat, A>|, <unused var>: R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|) context@fun <anonymous>(): R|foo/bar/<anonymous><A, Cat>| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ object : R|foo/bar/Nat<Cat, Cat, A, foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>>| {
                        private constructor(): R|foo/bar/<anonymous><A, Cat>| {
                            super<R|kotlin/Any|>()
                        }

                        public open override val firstFunctor: R|foo/bar/Functor<Cat, Cat, A>| = R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|
                            public get(): R|foo/bar/Functor<Cat, Cat, A>|

                        public open override val secondFunctor: R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>| = context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>|, R|A|>()
                            public get(): R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>|

                        public open override operator fun <X> get(c: R|{foo/bar/Obj<Cat, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, X>, X>|): R|{foo/bar/Component<Cat, A, {foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<A, X>>, io/github/kyay10/highkt/K<{foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>, X>>| {
                            ^get context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|A|, R|X|, R|X|>(R|<local>/c|).R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Component<Cat, A, {foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<A, X>>, io/github/kyay10/highkt/K<{foo/bar/Compose<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>, X>>|>()
                        }

                    }

                }
                ).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>>>|>()
            }

            public open override fun <A> rightUnitor(a: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, A>|): R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>>, A>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, A, A>|>(R|<local>/a|)
                ^rightUnitor R|kotlin/context|<R|foo/bar/Functor<Cat, Cat, A>|, R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|, R|foo/bar/<anonymous><A, Cat>|>(R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|, context(R|<local>/k|) R|foo/bar/identityFunctor|<R|Cat|>(), <L> = context(<unused var>: R|foo/bar/Functor<Cat, Cat, A>|, <unused var>: R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|) context@fun <anonymous>(): R|foo/bar/<anonymous><A, Cat>| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ object : R|foo/bar/Nat<Cat, Cat, foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A>| {
                        private constructor(): R|foo/bar/<anonymous><A, Cat>| {
                            super<R|kotlin/Any|>()
                        }

                        public open override val firstFunctor: R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>| = context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|A|, R|{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>|>()
                            public get(): R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>|

                        public open override val secondFunctor: R|foo/bar/Functor<Cat, Cat, A>| = R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|
                            public get(): R|foo/bar/Functor<Cat, Cat, A>|

                        public open override operator fun <X> get(c: R|{foo/bar/Obj<Cat, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, X>, X>|): R|{foo/bar/Component<Cat, {foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<{foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, X>>, io/github/kyay10/highkt/K<A, X>>| {
                            ^get context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|A|, R|X|, R|X|>(R|<local>/c|).R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Component<Cat, {foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, A, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<{foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, X>>, io/github/kyay10/highkt/K<A, X>>|>()
                        }

                    }

                }
                ).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>>, A>|>()
            }

            public open override fun <A> rightUnitorInv(a: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, A>|): R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, A, A>|>(R|<local>/a|)
                ^rightUnitorInv R|kotlin/context|<R|foo/bar/Functor<Cat, Cat, A>|, R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|, R|foo/bar/<anonymous><A, Cat>|>(R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|, context(R|<local>/k|) R|foo/bar/identityFunctor|<R|Cat|>(), <L> = context(<unused var>: R|foo/bar/Functor<Cat, Cat, A>|, <unused var>: R|it(foo/bar/Functor<Cat, Cat, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>)|) context@fun <anonymous>(): R|foo/bar/<anonymous><A, Cat>| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ object : R|foo/bar/Nat<Cat, Cat, A, foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>| {
                        private constructor(): R|foo/bar/<anonymous><A, Cat>| {
                            super<R|kotlin/Any|>()
                        }

                        public open override val firstFunctor: R|foo/bar/Functor<Cat, Cat, A>| = R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|
                            public get(): R|foo/bar/Functor<Cat, Cat, A>|

                        public open override val secondFunctor: R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>| = context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|A|, R|{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>|>()
                            public get(): R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>|

                        public open override operator fun <X> get(c: R|{foo/bar/Obj<Cat, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, X>, X>|): R|{foo/bar/Component<Cat, A, {foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<A, X>>, io/github/kyay10/highkt/K<{foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, X>>| {
                            ^get context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|A|, R|X|, R|X|>(R|<local>/c|).R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Component<Cat, A, {foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<A, X>>, io/github/kyay10/highkt/K<{foo/bar/Compose<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, X>>|>()
                        }

                    }

                }
                ).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>>>|>()
            }

            public open override fun <A, B, C> associator(a: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, A>|, b: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, B>, B>|, c: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, C>, C>|): R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, A, A>|>(R|<local>/a|)
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, B, B>|>(R|<local>/b|)
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, C, C>|>(R|<local>/c|)
                ^associator R|kotlin/context|<R|foo/bar/Functor<Cat, Cat, A>|, R|foo/bar/Functor<Cat, Cat, B>|, R|foo/bar/Functor<Cat, Cat, C>|, R|foo/bar/<anonymous><A, B, C, Cat>|>(R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|, R|<local>/b|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, B>|>|, R|<local>/c|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, C>|>|, <L> = context(<unused var>: R|foo/bar/Functor<Cat, Cat, A>|, <unused var>: R|foo/bar/Functor<Cat, Cat, B>|, <unused var>: R|foo/bar/Functor<Cat, Cat, C>|) context@fun <anonymous>(): R|foo/bar/<anonymous><A, B, C, Cat>| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ object : R|foo/bar/Nat<Cat, Cat, foo/bar/Compose<foo/bar/Compose<A, B>, C>, foo/bar/Compose<A, foo/bar/Compose<B, C>>>| {
                        private constructor(): R|foo/bar/<anonymous><A, B, C, Cat>| {
                            super<R|kotlin/Any|>()
                        }

                        public open override val firstFunctor: R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>>| = R|kotlin/context|<R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>)|, R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>>)|>(context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|A|, R|B|>(), <L> = context(<unused var>: R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>)|) context@fun <anonymous>(): R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                            ^ context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>|, R|C|>()
                        }
                        )
                            public get(): R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>>|

                        public open override val secondFunctor: R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>>| = R|kotlin/context|<R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>)|, R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>>)|>(context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|B|, R|C|>(), <L> = context(<unused var>: R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>)|) context@fun <anonymous>(): R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                            ^ context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|A|, R|{foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>|>()
                        }
                        )
                            public get(): R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>>|

                        public open override operator fun <X> get(c: R|{foo/bar/Obj<Cat, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, X>, X>|): R|{foo/bar/Component<Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<{foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>, X>>, io/github/kyay10/highkt/K<{foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>, X>>| {
                            ^get context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|A|, R|io/github/kyay10/highkt/K<B, io/github/kyay10/highkt/K<C, X>>|, R|io/github/kyay10/highkt/K<B, io/github/kyay10/highkt/K<C, X>>|>(context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|B|, R|io/github/kyay10/highkt/K<C, X>|, R|io/github/kyay10/highkt/K<C, X>|>(context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|C|, R|X|, R|X|>(R|<local>/c|))).R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Component<Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<{foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>, X>>, io/github/kyay10/highkt/K<{foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>, X>>|>()
                        }

                    }

                }
                ).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>>|>()
            }

            public open override fun <A, B, C> associatorInv(a: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, A>, A>|, b: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, B>, B>|, c: R|{foo/bar/Obj<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, C>, C>|): R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, A, A>|>(R|<local>/a|)
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, B, B>|>(R|<local>/b|)
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|foo/bar/Nat<Cat, Cat, C, C>|>(R|<local>/c|)
                ^associatorInv R|kotlin/context|<R|foo/bar/Functor<Cat, Cat, A>|, R|foo/bar/Functor<Cat, Cat, B>|, R|foo/bar/Functor<Cat, Cat, C>|, R|foo/bar/<anonymous><A, B, C, Cat>|>(R|<local>/a|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, A>|>|, R|<local>/b|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, B>|>|, R|<local>/c|.R|SubstitutionOverride<foo/bar/Nat.firstFunctor: R|foo/bar/Functor<Cat, Cat, C>|>|, <L> = context(<unused var>: R|foo/bar/Functor<Cat, Cat, A>|, <unused var>: R|foo/bar/Functor<Cat, Cat, B>|, <unused var>: R|foo/bar/Functor<Cat, Cat, C>|) context@fun <anonymous>(): R|foo/bar/<anonymous><A, B, C, Cat>| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ object : R|foo/bar/Nat<Cat, Cat, foo/bar/Compose<A, foo/bar/Compose<B, C>>, foo/bar/Compose<foo/bar/Compose<A, B>, C>>| {
                        private constructor(): R|foo/bar/<anonymous><A, B, C, Cat>| {
                            super<R|kotlin/Any|>()
                        }

                        public open override val firstFunctor: R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>>| = R|kotlin/context|<R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>)|, R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>>)|>(context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|B|, R|C|>(), <L> = context(<unused var>: R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>)|) context@fun <anonymous>(): R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                            ^ context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|A|, R|{foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>|>()
                        }
                        )
                            public get(): R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>>|

                        public open override val secondFunctor: R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>>| = R|kotlin/context|<R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>)|, R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>>)|>(context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|A|, R|B|>(), <L> = context(<unused var>: R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>)|) context@fun <anonymous>(): R|it(foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, Cat>, Cat>, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>>)| <inline=Inline, kind=EXACTLY_ONCE>  {
                            ^ context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|Cat|, R|Cat|, R|Cat|, R|{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>|, R|C|>()
                        }
                        )
                            public get(): R|foo/bar/Functor<Cat, Cat, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>>|

                        public open override operator fun <X> get(c: R|{foo/bar/Obj<Cat, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, X>, X>|): R|{foo/bar/Component<Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<{foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>, X>>, io/github/kyay10/highkt/K<{foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>, X>>| {
                            ^get context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|A|, R|io/github/kyay10/highkt/K<B, io/github/kyay10/highkt/K<C, X>>|, R|io/github/kyay10/highkt/K<B, io/github/kyay10/highkt/K<C, X>>|>(context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|B|, R|io/github/kyay10/highkt/K<C, X>|, R|io/github/kyay10/highkt/K<C, X>|>(context(R|<local>/<unused var>|) R|foo/bar/lift|<R|Cat|, R|Cat|, R|C|, R|X|, R|X|>(R|<local>/c|))).R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Component<Cat, {foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>, {foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>, X>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<{foo/bar/Compose<A, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, {foo/bar/Compose<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, B>, C>>, X>>, io/github/kyay10/highkt/K<{foo/bar/Compose<{foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, {foo/bar/Compose<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, A>, B>>, C>, X>>|>()
                        }

                    }

                }
                ).R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<Cat>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, Cat>, Cat>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<B, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, B>, C>>>>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>, C>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, B>>>, C>>>|>()
            }

        }

    }
    public abstract interface MonoidObject<Cat, F, I, A> : R|foo/bar/TensorProduct<Cat, F, I>| {
        public abstract fun empty(): R|{io/github/kyay10/highkt/K2<Cat, I, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, I>, A>|

        public abstract fun plus(): R|{io/github/kyay10/highkt/K2<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, A>>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<Cat, io/github/kyay10/highkt/K<F, {foo/bar/TypePair<A, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, A>, A>>>, A>|

    }
    public final typealias Monad<C, F> = R|foo/bar/MonoidObject<foo/bar/EndoK<C>, foo/bar/FunctorCompose<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, F>|
    public final typealias NormalMonad<F> = R|{foo/bar/Monad<foo/bar/ArrowK, F>=} foo/bar/MonoidObject<foo/bar/EndoK<foo/bar/ArrowK>, foo/bar/FunctorCompose<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, F>|
    public abstract interface UsualMonad<M> : R|kotlin/Any| {
        public abstract fun <A> pure(a: R|A|): R|io/github/kyay10/highkt/K<M, A>|

        public abstract fun <A, B> R|io/github/kyay10/highkt/K<M, A>|.bind(f: R|(A) -> io/github/kyay10/highkt/K<M, B>|): R|io/github/kyay10/highkt/K<M, B>|

    }
    public final fun <M> R|{foo/bar/NormalMonad<M>=} foo/bar/MonoidObject<foo/bar/EndoK<foo/bar/ArrowK>, foo/bar/FunctorCompose<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, M>|.toUsualMonad(): R|foo/bar/UsualMonad<M>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/NormalMonad<M>=} foo/bar/MonoidObject<*, *, *, *>, foo/bar/EndoK<foo/bar/ArrowK>>, foo/bar/FunctorCompose<*>>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, M>|>(this@R|foo/bar/toUsualMonad|)
        ^toUsualMonad object : R|foo/bar/UsualMonad<M>| {
            private constructor(): R|foo/bar/<anonymous><M>| {
                super<R|kotlin/Any|>()
            }

            public open override fun <A> pure(a: R|A|): R|io/github/kyay10/highkt/K<M, A>| {
                ^pure this@R|foo/bar/toUsualMonad|.R|SubstitutionOverride<foo/bar/MonoidObject.empty: R|{io/github/kyay10/highkt/K2<foo/bar/EndoK<foo/bar/ArrowK>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/EndoK<foo/bar/ArrowK>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, M>|>|().R|SubstitutionOverride<foo/bar/Nat.get: R|{foo/bar/Component<foo/bar/ArrowK, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, M, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/ArrowK, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>>, io/github/kyay10/highkt/K<M, A>>|>|<R|A|>(R|foo/bar/idArrow|<R|A|>()).R|SubstitutionOverride<kotlin/Function1.invoke: R|io/github/kyay10/highkt/K<M, A>|>|(R|<local>/a|)
            }

            public open override fun <A, B> R|io/github/kyay10/highkt/K<M, A>|.bind(f: R|(A) -> io/github/kyay10/highkt/K<M, B>|): R|io/github/kyay10/highkt/K<M, B>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Function1<*, *>, A>, io/github/kyay10/highkt/K<M, B>>|>(R|<local>/f|)
                ^bind R|kotlin/context|<R|foo/bar/Functor<foo/bar/ArrowK, foo/bar/ArrowK, M>|, R|io/github/kyay10/highkt/K<M, B>|>(this@R|foo/bar/toUsualMonad|.R|SubstitutionOverride<foo/bar/MonoidObject.plus: R|{io/github/kyay10/highkt/K2<foo/bar/EndoK<foo/bar/ArrowK>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/EndoK<foo/bar/ArrowK>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>>, M>|>|().R|SubstitutionOverride<foo/bar/Nat.secondFunctor: R|foo/bar/Functor<foo/bar/ArrowK, foo/bar/ArrowK, M>|>|, <L> = context(<unused var>: R|foo/bar/Functor<foo/bar/ArrowK, foo/bar/ArrowK, M>|) context@fun <anonymous>(): R|io/github/kyay10/highkt/K<M, B>| <inline=Inline, kind=EXACTLY_ONCE>  {
                    lval mapped: R|io/github/kyay10/highkt/K<M, io/github/kyay10/highkt/K<M, B>>| = context(R|<local>/<unused var>|) R|foo/bar/lift|<R|{foo/bar/ArrowK=} (*) -> *|, R|{foo/bar/ArrowK=} (*) -> *|, R|M|, R|A|, R|io/github/kyay10/highkt/K<M, B>|>(R|<local>/f|).R|SubstitutionOverride<kotlin/Function1.invoke: R|io/github/kyay10/highkt/K<M, io/github/kyay10/highkt/K<M, B>>|>|(this@R|foo/bar/<anonymous>.bind|)
                    Q|kotlin/Unit|
                    Q|kotlin/Unit|
                    ^ this@R|foo/bar/toUsualMonad|.R|SubstitutionOverride<foo/bar/MonoidObject.plus: R|{io/github/kyay10/highkt/K2<foo/bar/EndoK<foo/bar/ArrowK>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/EndoK<foo/bar/ArrowK>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>>, M>|>|().R|SubstitutionOverride<foo/bar/Nat.get: R|{foo/bar/Component<foo/bar/ArrowK, {foo/bar/Compose<foo/bar/TypePairFirst<{foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>, foo/bar/TypePairSecond<{foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, M>, M>, M, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/ArrowK, io/github/kyay10/highkt/K<{foo/bar/Compose<foo/bar/TypePairFirst<{foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>, foo/bar/TypePairSecond<{foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, M>, M>, A>>, io/github/kyay10/highkt/K<M, A>>|>|<R|B|>(R|foo/bar/idArrow|<R|B|>()).R|SubstitutionOverride<kotlin/Function1.invoke: R|io/github/kyay10/highkt/K<M, B>|>|(R|<local>/mapped|)
                }
                )
            }

        }

    }
    public final fun <M> R|foo/bar/UsualMonad<M>|.toNormalFunctor(): R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, M>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/UsualMonad<*>, M>|>(this@R|foo/bar/toNormalFunctor|)
        ^toNormalFunctor object : R|foo/bar/Functor<foo/bar/ArrowK, foo/bar/ArrowK, M>| {
            private constructor(): R|foo/bar/<anonymous><M>| {
                super<R|kotlin/Any|>()
            }

            public open override val firstCategory: R|foo/bar/Category<{foo/bar/ArrowK=} kotlin/Function1<*, *>>| = Q|foo/bar/ArrowCategory|
                public get(): R|foo/bar/Category<{foo/bar/ArrowK=} kotlin/Function1<*, *>>|

            public open override val secondCategory: R|foo/bar/Category<{foo/bar/ArrowK=} kotlin/Function1<*, *>>| = Q|foo/bar/ArrowCategory|
                public get(): R|foo/bar/Category<{foo/bar/ArrowK=} kotlin/Function1<*, *>>|

            public open override fun <A, B> lift(f: R|{io/github/kyay10/highkt/K2<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A, B>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>, B>|): R|{io/github/kyay10/highkt/K2<{foo/bar/ArrowK=} kotlin/Function1<*, *>, io/github/kyay10/highkt/K<M, A>, io/github/kyay10/highkt/K<M, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, io/github/kyay10/highkt/K<M, A>>, io/github/kyay10/highkt/K<M, B>>| {
                Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|it(kotlin/Function1<A, B> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Function1<*, *>, A>, B>)|>(R|<local>/f|)
                ^lift fun <anonymous>(it: R|io/github/kyay10/highkt/K<M, A>|): R|io/github/kyay10/highkt/K<M, B>| <inline=NoInline>  {
                    ^ (this@R|foo/bar/toNormalFunctor|, R|<local>/it|).R|SubstitutionOverride<foo/bar/UsualMonad.bind: R|io/github/kyay10/highkt/K<M, B>|>|<R|A|, R|B|>(<L> = bind@fun <anonymous>(it: R|A|): R|io/github/kyay10/highkt/K<M, B>| <inline=NoInline>  {
                        ^ this@R|foo/bar/toNormalFunctor|.R|SubstitutionOverride<foo/bar/UsualMonad.pure: R|io/github/kyay10/highkt/K<M, A>|>|<R|B|>(R|<local>/f|.R|SubstitutionOverride<kotlin/Function1.invoke: R|B|>|(R|<local>/it|))
                    }
                    )
                }
                .R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/ArrowK=} kotlin/Function1<*, *>, io/github/kyay10/highkt/K<M, A>, io/github/kyay10/highkt/K<M, B>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, io/github/kyay10/highkt/K<M, A>>, io/github/kyay10/highkt/K<M, B>>|>()
            }

        }

    }
    public final fun <M> R|foo/bar/UsualMonad<M>|.toNormalMonad(): R|{foo/bar/NormalMonad<M>=} foo/bar/MonoidObject<foo/bar/EndoK<foo/bar/ArrowK>, foo/bar/FunctorCompose<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, M>| {
        Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|io/github/kyay10/highkt/K<foo/bar/UsualMonad<*>, M>|>(this@R|foo/bar/toNormalMonad|)
        ^toNormalMonad R|kotlin/context|<R|it(foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, M> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, M>)|, R|foo/bar/ArrowCategory|, R|foo/bar/<anonymous><M>|>(this@R|foo/bar/toNormalMonad|.R|foo/bar/toNormalFunctor|<R|M|>(), Q|foo/bar/ArrowCategory|, <L> = context(<unused var>: R|it(foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, M> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Functor<*, *, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, M>)|, <unused var>: R|foo/bar/ArrowCategory|) context@fun <anonymous>(): R|foo/bar/<anonymous><M>| <inline=Inline, kind=EXACTLY_ONCE>  {
            ^ object : R|{foo/bar/NormalMonad<M>=} foo/bar/MonoidObject<foo/bar/EndoK<foo/bar/ArrowK>, foo/bar/FunctorCompose<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, M>|, R|foo/bar/TensorProduct<foo/bar/EndoK<foo/bar/ArrowK>, foo/bar/FunctorCompose<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>| {
                private constructor(): R|foo/bar/<anonymous><M>| {
                    super<R|kotlin/Any|>()
                }

                private final field $$delegate_0: R|foo/bar/TensorProduct<foo/bar/EndoK<foo/bar/ArrowK>, foo/bar/FunctorCompose<*>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>| = context(R|<local>/<unused var>|) R|foo/bar/endoFunctorComposeTensor|<R|{foo/bar/ArrowK=} (*) -> *|>()

                public open override fun empty(): R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<{foo/bar/ArrowK=} kotlin/Function1<*, *>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<{foo/bar/ArrowK=} kotlin/Function1<*, *>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>, M>| {
                    ^empty object : R|foo/bar/Nat<foo/bar/ArrowK, foo/bar/ArrowK, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, M>| {
                        private constructor(): R|foo/bar/<anonymous><M>| {
                            super<R|kotlin/Any|>()
                        }

                        public open override val firstFunctor: R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>| = context(R|<local>/<unused var>|) R|foo/bar/identityFunctor|<R|{foo/bar/ArrowK=} (*) -> *|>()
                            public get(): R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>>|

                        public open override val secondFunctor: R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, M>| = context(R|<local>/<unused var>|) R|kotlin/contextOf|<R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, M>|>()
                            public get(): R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, M>|

                        public open override operator fun <A> get(c: R|{foo/bar/Obj<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>, A>|): R|{foo/bar/Component<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, M, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>>, io/github/kyay10/highkt/K<M, A>>| {
                            Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|it(kotlin/Function1<A, A> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Function1<*, *>, A>, A>)|>(R|<local>/c|)
                            ^get context@fun <anonymous>(a: R|A|): R|io/github/kyay10/highkt/K<M, A>| <inline=NoInline>  {
                                ^ this@R|foo/bar/toNormalMonad|.R|SubstitutionOverride<foo/bar/UsualMonad.pure: R|io/github/kyay10/highkt/K<M, A>|>|<R|A|>(R|<local>/a|)
                            }
                            .R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Component<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, M, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, io/github/kyay10/highkt/K<{io/github/kyay10/highkt/Identity=} io/github/kyay10/highkt/Id<*>, A>>, io/github/kyay10/highkt/K<M, A>>|>()
                        }

                    }

                }

                public open override fun plus(): R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<{foo/bar/ArrowK=} kotlin/Function1<*, *>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<{foo/bar/ArrowK=} kotlin/Function1<*, *>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>>, M>| {
                    ^plus object : R|foo/bar/Nat<foo/bar/ArrowK, foo/bar/ArrowK, foo/bar/Compose<M, M>, M>| {
                        private constructor(): R|foo/bar/<anonymous><M>| {
                            super<R|kotlin/Any|>()
                        }

                        public open override val firstFunctor: R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/Compose<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, M>, M>>| = context(R|<local>/<unused var>|, R|<local>/<unused var>|) R|foo/bar/composeFunctors|<R|{foo/bar/ArrowK=} (*) -> *|, R|{foo/bar/ArrowK=} (*) -> *|, R|{foo/bar/ArrowK=} (*) -> *|, R|M|, R|M|>()
                            public get(): R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/Compose<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, M>, M>>|

                        public open override val secondFunctor: R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, M>| = context(R|<local>/<unused var>|) R|kotlin/contextOf|<R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, M>|>()
                            public get(): R|foo/bar/Functor<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>, M>|

                        public open override operator fun <A> get(c: R|{foo/bar/Obj<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, A>, A>|): R|{foo/bar/Component<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/Compose<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, M>, M>, M, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, io/github/kyay10/highkt/K<{foo/bar/Compose<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, M>, M>, A>>, io/github/kyay10/highkt/K<M, A>>| {
                            Q|io/github/kyay10/highkt|.R|io/github/kyay10/highkt/assertIsType|<R|it(kotlin/Function1<A, A> & io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<kotlin/Function1<*, *>, A>, A>)|>(R|<local>/c|)
                            ^get context@fun <anonymous>(mma: R|io/github/kyay10/highkt/K<M, io/github/kyay10/highkt/K<M, A>>|): R|io/github/kyay10/highkt/K<M, A>| <inline=NoInline>  {
                                ^ (this@R|foo/bar/toNormalMonad|, R|<local>/mma|).R|SubstitutionOverride<foo/bar/UsualMonad.bind: R|io/github/kyay10/highkt/K<M, B>|>|<R|io/github/kyay10/highkt/K<M, A>|, R|A|>(<L> = bind@fun <anonymous>(ma: R|io/github/kyay10/highkt/K<M, A>|): R|io/github/kyay10/highkt/K<M, A>| <inline=NoInline>  {
                                    ^ R|<local>/ma|
                                }
                                )
                            }
                            .R|io/github/kyay10/highkt/expandTo|<R|{foo/bar/Component<{foo/bar/ArrowK=} kotlin/Function1<*, *>, {foo/bar/Compose<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, M>, M>, M, A>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/ArrowK=} kotlin/Function1<*, *>, io/github/kyay10/highkt/K<{foo/bar/Compose<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Composition<*, *, *>, M>, M>, A>>, io/github/kyay10/highkt/K<M, A>>|>()
                        }

                    }
                    .R|io/github/kyay10/highkt/expandTo|<R|{io/github/kyay10/highkt/K2<{foo/bar/EndoK<{foo/bar/ArrowK=} kotlin/Function1<*, *>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<{foo/bar/EndoK<{foo/bar/ArrowK=} kotlin/Function1<*, *>>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/Nat<*, *, *, *>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, {foo/bar/ArrowK=} kotlin/Function1<*, *>>, io/github/kyay10/highkt/K<foo/bar/FunctorCompose<*>, {foo/bar/TypePair<M, M>=} io/github/kyay10/highkt/K<io/github/kyay10/highkt/K<foo/bar/TypePaired<*, *, *>, M>, M>>>, M>|>()
                }

            }

        }
        )
    }
    public final fun box(): R|kotlin/String| {
        ^box String(OK)
    }
